name: Test

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  macos:
    name: macOS (${{ matrix.elixir }}, ${{ matrix.otp }})
    runs-on: macos-14
    defaults:
      run:
        working-directory: example
    env:
      MIX_ENV: test
    strategy:
      fail-fast: false
      matrix:
        elixir: ["1.15.4", "1.16.2"]
        otp: ["25.3.2.15"]
        include:
          - elixir: "1.16.2"
            lint: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Elixir and Erlang
        id: setup
        run: |
          curl -fsSO https://elixir-lang.org/install.sh
          sh install.sh elixir@${{ matrix.elixir }} otp@${{ matrix.otp }}

          OTP_VERSION="${{ matrix.otp }}"
          OTP_MAJOR="${OTP_VERSION%%.*}"
          export OTP_PATH=$HOME/.elixir-install/installs/otp/${OTP_VERSION}/bin
          export ELIXIR_PATH=$HOME/.elixir-install/installs/elixir/${{ matrix.elixir }}-otp-${OTP_MAJOR}/bin

          echo "path=${OTP_PATH}:${ELIXIR_PATH}" >> $GITHUB_OUTPUT
          echo "${OTP_PATH}" >> $GITHUB_PATH
          echo "${ELIXIR_PATH}" >> $GITHUB_PATH
          
      - name: Setup Mix
        run: |
          mix local.hex --force
          mix local.rebar --force

      - name: Install dependencies
        run: |
          export PATH="${{ steps.setup.outputs.path }}:${PATH}"
          mix deps.get

      - name: Compile and check warnings
        run: |
          export PATH="${{ steps.setup.outputs.path }}:${PATH}"
          mix nif_call.put_header --overwrite
          mix compile --warnings-as-errors

      - name: Check formatting
        if: ${{ matrix.lint }}
        run: |
          export PATH="${{ steps.setup.outputs.path }}:${PATH}"
          mix format --check-formatted

      - name: Run tests
        run: |
          export PATH="${{ steps.setup.outputs.path }}:${PATH}"
          mix test --warnings-as-errors
